# ================================================================================================
#  workshop
#  Copyright (C) 2022 Tim Leonard
# ================================================================================================
type: shader
version: 1

# This effect is used to render static unskinned geometry.

imports: [ data:shaders/common.yaml ]

effects:
  static_geometry:
    techniques:
      static_geometry_wireframe: 
        wireframe: [ true ]
      static_geometry_masked: 
        domain: [ masked ]
        wireframe: [ false ]
      static_geometry_opaque: 
        domain: [ opaque ]
        wireframe: [ false ]
      static_geometry_transparent: 
        domain: [ transparent ]
        wireframe: [ false ]

vertex_layouts:
  geometry_vertex:
    position: float3
    normal: float3
    tangent: float3
    uv0: float2

param_blocks:
  geometry_instance_info:
    scope: instance
    fields:
      model_matrix: float4x4
  geometry_info:
    scope: draw
    fields:
      albedo_texture: texture2d
      albedo_sampler: sampler
      opacity_texture: texture2d
      opacity_sampler: sampler
      metallic_texture: texture2d
      metallic_sampler: sampler
      roughness_texture: texture2d
      roughness_sampler: sampler
      normal_texture: texture2d
      normal_sampler: sampler      

techniques:
  # Technique to use when rendering wireframe geometry.
  static_geometry_wireframe:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_opaque
    render_state: default_wireframe
    vertex_layout: geometry_vertex
    output_target: gbuffer
    param_blocks: [ gbuffer, view_info, geometry_info, geometry_instance_info ]

  # Technique to use when rendering basic opaque geometry.
  static_geometry_opaque:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_opaque
    render_state: default
    vertex_layout: geometry_vertex
    output_target: gbuffer
    param_blocks: [ gbuffer, view_info, geometry_info, geometry_instance_info ]

  # Technique to use when rendering geometry where pixels are discarded if alpha < 0.5
  static_geometry_masked:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_masked
    render_state: default
    vertex_layout: geometry_vertex
    output_target: gbuffer
    param_blocks: [ gbuffer, view_info, geometry_info, geometry_instance_info ]

  # Technique to use when rendering transparent geometry - input is sorted and no depth writes are enabled.
  static_geometry_transparent:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_transparent
    render_state: transparent
    vertex_layout: geometry_vertex
    output_target: gbuffer
    param_blocks: [ gbuffer, view_info, geometry_info, geometry_instance_info ]
